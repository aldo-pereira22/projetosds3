{"ast":null,"code":"var _jsxFileName = \"/home/byaldo/cursos/ws-devsuperior/projeto-spring-react-sds3/frontend/src/components/BarCharts/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: {\n      categories: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n    },\n    series: [{\n      name: \"% Sucesso\",\n      data: [43.6, 67.1, 67.7, 45.6, 71.1]\n    }]\n  });\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  };\n  const mockData = {\n    labels: {\n      categories: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n    },\n    series: [{\n      name: \"% Sucesso\",\n      data: [43.6, 67.1, 67.7, 45.6, 71.1]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      xaxis: mockData.labels\n    },\n    series: mockData.series,\n    type: \"bar\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BarChart, \"4jVIKo+kWC69c4hLL9d8obQyfC4=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/home/byaldo/cursos/ws-devsuperior/projeto-spring-react-sds3/frontend/src/components/BarCharts/index.tsx"],"names":["useState","Chart","BarChart","chartData","setChartData","labels","categories","series","name","data","options","plotOptions","bar","horizontal","mockData","xaxis"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;;AAcA,MAAOC,QAAQ,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAa;AACnDK,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,QAA1B,EAAoC,OAApC,EAA6C,OAA7C;AADR,KAD2C;AAInDC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,WADV;AAEIC,MAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB;AAFV,KADI;AAJ2C,GAAb,CAA1C;AAYA,QAAMC,OAAO,GAAG;AACZC,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE;AACDC,QAAAA,UAAU,EAAE;AADX;AADI;AADD,GAAhB;AAQA,QAAMC,QAAQ,GAAG;AACbT,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,QAA1B,EAAoC,OAApC,EAA6C,OAA7C;AADR,KADK;AAIbC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,WADV;AAEIC,MAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB;AAFV,KADI;AAJK,GAAjB;AAWA,sBACI,QAAC,KAAD;AACI,IAAA,OAAO,EAAE,EAAE,GAAGC,OAAL;AAAcK,MAAAA,KAAK,EAACD,QAAQ,CAACT;AAA7B,KADb;AAEI,IAAA,MAAM,EAAKS,QAAQ,CAACP,MAFxB;AAGI,IAAA,IAAI,EAAC,KAHT;AAII,IAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,UADJ;AASD,CA1CH;;GAAOL,Q;;KAAAA,Q;AA4CL,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport Chart from 'react-apexcharts';\n\ntype SeriesData = {\n    name: string;\n    data: number[];\n}\ntype ChartData = {\n    labels: {\n        categories:[];\n    };\n\n    series: SeriesData[];\n}\n\nconst  BarChart = () => {\n\n    const [chartData, setChartData] = useState<ChartData>( {\n        labels: {\n            categories: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n        },\n        series: [\n            {\n                name: \"% Sucesso\",\n                data: [43.6, 67.1, 67.7, 45.6, 71.1]                   \n            }\n        ]\n    } );\n\n    const options = {\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            }\n        },\n    };\n    \n    const mockData = {\n        labels: {\n            categories: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n        },\n        series: [\n            {\n                name: \"% Sucesso\",\n                data: [43.6, 67.1, 67.7, 45.6, 71.1]                   \n            }\n        ]\n    };\n    return (\n        <Chart \n            options={{ ...options, xaxis:mockData.labels }}\n            series = { mockData.series}\n            type=\"bar\"\n            height=\"240\"\n        />\n\n    );\n  }\n  \n  export default BarChart;\n  "]},"metadata":{},"sourceType":"module"}